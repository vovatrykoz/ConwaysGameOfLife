namespace Conway.Tests

open Conway.App.Controls
open Conway.App.File
open Conway.Encoding
open Conway.Core
open NUnit.Framework

module ``Binary Canvas File Saver Tests`` =
    open Conway.App

    [<Test>]
    let ``Can correctly encode a simple canvas with default camera parameters`` () =
        let game = new Game(ConwayGrid.createDead 4 4)
        let camera = new Camera(0.0f, 0.0f)
        let canvas = new Canvas(0.0f, 0.0f, 100.0f, 100.0f, camera, game, 25.0f)

        let expectedEncoding = [|
            0b0000_0000uy // camera X-coordinate (32-bit float)
            0b0000_0000uy // ...
            0b0000_0000uy // ...
            0b0000_0000uy // ...
            0b0000_0000uy // camera Y-coordinate (32-bit float)
            0b0000_0000uy // ...
            0b0000_0000uy // ...
            0b0000_0000uy // ...
            0b0000_0000uy // camera zoom factor (32-bit float)
            0b0000_0000uy // ...
            0b1000_0000uy // ...
            0b0011_1111uy // ...
            0b0000_0100uy // 4 rows (32-bit int)
            0b0000_0000uy // ...
            0b0000_0000uy // ...
            0b0000_0000uy // ...
            0b0000_0100uy // 4 cols (32-bit int)
            0b0000_0000uy // ...
            0b0000_0000uy // ...
            0b0000_0000uy // ...
            0b0000_0001uy // generation counter (32-bit int)
            0b0000_0000uy // ...
            0b0000_0000uy // ...
            0b0000_0000uy // ...
            0b0000_0000uy // 4x4 actual grid with all cells dead
            0b0000_0000uy // ...
            0b0000_0000uy // 4x4 initial grid with all cells dead
            0b0000_0000uy // ...
        |]

        let encoder = ConwayByteEncoder() :> IConwayByteEncoder
        let fileSaver = BinaryCanvasFileSaver encoder
        let actualEncoding = fileSaver.EncodeCanvasData canvas

        CollectionAssert.AreEqual(expectedEncoding, actualEncoding)
